{
  "notices": [
    {
      "title": "custom resources: provisioning failures",
      "issueNumber": 26325,
      "overview": "Custom resources may fail to deploy / destroy ",
      "components": [
        {
          "name": "aws-cdk-lib.core.CustomResource",
          "version": ">=v2.87.0 <v2.88.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "custom-resources: `INACTIVE` custom resource provider lambda throws `functionActiveV2 is not found`",
      "issueNumber": 24358,
      "overview": "If the custom resource provider Lambda becomes `INACTIVE`, the custom resource provider framework attempts to call `functionActiveV2()` to wait for the function to become active. This throws the error because the SDK installed by Lambda is at version 2.1055.0, but `functionActiveV2` does not exist until 2.1080.0.",
      "components": [
        {
          "name": "aws-cdk-lib.custom-resources",
          "version": ">=v2.60.0 <v2.76.1"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "core: Names of deployed stacks change, requiring redeployment",
      "issueNumber": 25130,
      "overview": "The names of stacks that contain special characters (such as '-') are incorrectly sanitized. This is a breaking change to the names of stacks that have already been deployed.",
      "components": [
        {
          "name": "aws-cdk-lib/core.Stack",
          "version": ">=v2.74.0 <v2.75.1"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "aws-wafv2: The structs naming pattern changes from FooAction to Foo",
      "issueNumber": 24668,
      "overview": "The structs naming pattern changes from AllowAction, BlockAction, CaptchaAction, ChallengeAction and CountAction to Allow, Block, Captcha, Challenge and Count respectively.",
      "components": [
        {
          "name": "aws-cdk-lib.aws_wafv2.CfnRuleGroup",
          "version": ">=v2.63.0 <v2.70.0"
        },
        {
          "name": "@aws-cdk/aws-wafv2.CfnRuleGroup",
          "version": ">=v1.192.0 <v1.198.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "triggers: Deployment of trigger functions fails with a type error",
      "issueNumber": 23407,
      "overview": "The Trigger and TriggerFunction constructs fail to deploy when upgrading.",
      "components": [
        {
          "name": "aws-cdk-lib.triggers.Trigger",
          "version": "^2.56.0 <2.61.1"
        },
        {
          "name": "aws-cdk-lib.triggers.TriggerFunction",
          "version": "^2.56.0 <2.61.1"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "aws-iam: IAM OIDC provider configures the wrong certificate thumbprint",
      "issueNumber": 8607,
      "overview": "Your application is using the iam.OpenIDConnectProvider resource, which currently configures the thumbprint of the leaf certificate instead of the root. Since leaf certificates are rotated more frequently, you are in danger of application errors next time those certificates get rotated. See the attached issue for mitigation steps and apply them as soon as possible.",
      "components": [
        {
          "name": "aws-cdk-lib.aws_iam.OpenIdConnectProvider",
          "version": "^2.0.0 <2.51.0"
        },
        {
          "name": "@aws-cdk/aws-iam.OpenIdConnectProvider",
          "version": "^1.0.0 <1.181.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "apigateway: Unable to serialize value as aws-cdk-lib.aws_apigateway.IModel",
      "issueNumber": 21902,
      "overview": "Users of CDK in any language other than TS/JS cannot use values that return an instance of a deprecated class.",
      "components": [
        {
          "name": "framework",
          "version": ">=2.41.0 <=2.43.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "cli: cdk init produces EACCES: permission denied and does not fill the directory",
      "issueNumber": 22090,
      "overview": "The CLI is unable to initialize new apps if CDK is installed globally in a directory owned by root",
      "components": [
        {
          "name": "cli",
          "version": "2.42.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "cli: no stacks are deployed if the `--exclusively` (`-e`) flag is used",
      "issueNumber": 21661,
      "overview": "When the `--exclusively` flag is used to select stacks with dependencies, instead no stacks are deployed at all and the deployment silently no-ops.",
      "components": [
        {
          "name": "cli",
          "version": "2.38.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "(aws-eks): Regression in installing Helm charts from assets",
      "issueNumber": 19179,
      "overview": "Helm charts fail to install when provided as an asset. This issue does not affect charts installed from a repository.",
      "components": [
        {
          "name": "framework",
          "version": "2.14.0"
        },
        {
          "name": "framework",
          "version": "1.146.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "AWS CDK v1 End-of-Support June 1, 2023",
      "issueNumber": 19836,
      "overview": "AWS CDK v1 is currently in maintenance mode. Support for AWS CDK v1 will end entirely on June 1, 2023. Migrate to AWS CDK v2 to continue to get the latest features and fixes!",
      "components": [
        {
          "name": "framework",
          "version": "1.*"
        },
        {
          "name": "cli",
          "version": "1.*"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "(aws-ec2): VPCs with SubnetType.PRIVATE cause resource destruction on versions >=v1.162.0, <=1.163.2",
      "issueNumber": 21138,
      "overview": "On upgrading to versions >=v1.162.0 & <=1.163.2 and using SubnetType.PRIVATE in a VPC subnetConfiguration, some of the VPC resources will be destroyed.",
      "components": [
        {
          "name": "framework",
          "version": ">=1.162.0 <=1.163.2"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "(ecs-patterns) NLB-fronted services may cause target groups to be replaced on upgrade",
      "issueNumber": 24642,
      "overview": "Upgrading to versions >=1.141.0 or >=2.9.0 may cause target groups to be replaced when using NetworkLoadBalancedFargateService or NetworkLoadBalancedEc2Service.",
      "components": [
        {
          "name": "aws-cdk-lib.aws_ecs_patterns.NetworkLoadBalancedFargateService",
          "version": ">=2.0.0 <2.9.0"
        },
        {
          "name": "aws-cdk-lib.aws_ecs_patterns.NetworkLoadBalancedEc2Service",
          "version": ">=2.0.0 <2.9.0"
        },
        {
          "name": "@aws-cdk/aws-ecs-patterns.NetworkLoadBalancedFargateService",
          "version": "<1.141.0"
        },
        {
          "name": "@aws-cdk/aws-ecs-patterns.NetworkLoadBalancedEc2Service",
          "version": "<1.141.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "(pipelines) CDK Pipelines role has overly permissive trust policy",
      "issueNumber": 25356,
      "overview": "A Role that is intended to be used only by the Pipeline can be assumed from other Roles in the same account.",
      "components": [
        {
          "name": "aws-cdk-lib.pipelines.CodePipeline",
          "version": ">=2.26.0 <2.77.0"
        },
        {
          "name": "@aws-cdk/pipelines.CodePipeline",
          "version": ">=1.158.0 <1.200.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "(s3) Logging buckets may fail to create with 'Bucket cannot have ACLs set'",
      "issueNumber": 25358,
      "overview": "Starting April 2023, S3 buckets configured with ACLs (used for S3 access logging and CloudFront logging) need additional configuration",
      "components": [
        {
          "name": "aws-cdk-lib.s3.Bucket",
          "version": "^2.0.0 <2.60.0"
        },
        {
          "name": "@aws-cdk/s3.Bucket",
          "version": "^1.0.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "(eks) eks overly permissive trust policies",
      "issueNumber": 25674,
      "overview": "The default MastersRole allows any identity in the account with the appropriate sts:AssumeRole permissions to assume it.",
      "components": [
        {
          "name": "@aws-cdk/aws-eks.Cluster",
          "version": ">=1.57.0 <1.62.0"
        },
        {
          "name": "@aws-cdk/aws-eks.FargateCluster",
          "version": ">=1.57.0 <1.62.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "(eks) eks overly permissive trust policies",
      "issueNumber": 25674,
      "overview": "Cluster CreationRole and default MastersRole allows any identity in the account with the appropriate sts:AssumeRole permissions to assume it.",
      "components": [
        {
          "name": "@aws-cdk/aws-eks.Cluster",
          "version": ">=1.62.0 <1.202.0"
        },
        {
          "name": "@aws-cdk/aws-eks.FargateCluster",
          "version": ">=1.62.0 <1.202.0"
        },
        {
          "name": "aws-cdk-lib.aws_eks.Cluster",
          "version": ">=2.0.0-rc.1 <2.80.0"
        },
        {
          "name": "aws-cdk-lib.aws_eks.FargateCluster",
          "version": ">=2.0.0-rc.1 <2.80.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "(cli) cdk deploy fails when stacks or stages share assets",
      "issueNumber": 25714,
      "overview": "A single asset used in two stacks or stages that depend on each other causes 'cdk deploy' to exit early.",
      "components": [
        {
          "name": "cli",
          "version": ">=2.80.0 <2.83.1"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "cdk deploy fails on regions ap-southeast-4 and il-central-1",
      "issueNumber": 27189,
      "overview": "These regions don't have the AWS::CDK::Metadata resource type available yet, leading to a deployment failure. Workaround: use the --no-version-reporting flag",
      "components": [
        {
          "name": "framework",
          "version": "2.94.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "Unexpected keyword argument 'tag' when calling ContainerImage.fromEcrRepository",
      "issueNumber": 27240,
      "overview": "Renaming the 'tag' prop  to 'tagOrDigest' in ContainerImage.fromEcrRepository function introduces a breaking change in Python when using keyword parameters.",
      "components": [
        {
          "name": "aws-cdk-lib.aws-ecs.ContainerImage",
          "version": "2.96.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "Python users using Schedule class get synth-time TypeError for mismatched types",
      "issueNumber": 27259,
      "overview": "Using the 'Schedule' class in aws-events, aws-autoscaling, aws-applicationautoscaling, aws-backup, aws-scheduler-alpha, aws-synthetics-alpha causes a TypeError for Python users.",
      "components": [
        {
          "name": "aws-cdk-lib.aws-events.Schedule",
          "version": "2.97.0"
        },
        {
          "name": "aws-cdk-lib.aws-backup.Schedule",
          "version": "2.97.0"
        },
        {
          "name": "aws-cdk-lib.aws-autoscaling.Schedule",
          "version": "2.97.0"
        },
        {
          "name": "aws-cdk-lib.aws-applicationautoscaling.Schedule",
          "version": "2.97.0"
        },
        {
          "name": "@aws-cdk/aws-synthetics-alpha.Schedule",
          "version": "2.97.0-alpha.0"
        },
        {
          "name": "@aws-cdk/aws-scheduler-alpha.ScheduleExpression",
          "version": "2.97.0-alpha.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "Incorrect action in policy of Bucket `grantRead` method",
      "issueNumber": 27547,
      "overview": "Using the `grantRead` method on `aws-cdk-lib/aws-s3.Bucket` results in an invalid action attached to the resource policy which can cause unexpected failures when interacting with the bucket.",
      "components": [
        {
          "name": "aws-cdk-lib/aws-s3.Bucket",
          "version": "2.101.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "Kinesis Firehose CIDR block support issue for ap-south-2, eu-central-2 and eu-south-2",
      "issueNumber": 27656,
      "overview": "Deploying or trying to synth the specific regions result in `Mapping doesn't contain top-level key` for the `@aws-cdk/aws-kinesisfirehose-alpha` module",
      "components": [
        {
          "name": "@aws-cdk/aws-kinesisfirehose-alpha.deliveryStream",
          "version": ">=v2.95.0 <v2.102.0"
        }
      ],
      "schemaVersion": "1"
    },
    {
      "title": "(pipelines) step id cannot be unresolved during synthesis",
      "issueNumber": 27701,
      "overview": "Using S3Source, CodeStarConnectionSource, or CodeCommitSource with a tokenized repository name or branch name will result in a synth time error stating, 'Step id cannot be unresolved'.",
      "components": [
        {
          "name": "aws-cdk-lib.pipelines.S3Source",
          "version": "2.103.0"
        },
        {
          "name": "aws-cdk-lib.pipelines.CodeStarConnectionSource",
          "version": "2.103.0"
        },
        {
          "name": "aws-cdk-lib.pipelines.CodeCommitSource",
          "version": "2.103.0"
        }
      ],
      "schemaVersion": "1"
    }
  ]
}
